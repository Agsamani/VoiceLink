version: "3.8"

services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dbinit:/docker-entrypoint-initdb.d/
    networks:
      - voice-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build: ./server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${PG_USER}:${PG_PASS}@postgres:5432/${PG_DB}
    networks:
      - voice-network
    ports:
      - "3000:3000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules

  client:
    build: ./client
    networks:
      - voice-network
    ports:
      - "5173"
    deploy:
      mode: replicated
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - server

volumes:
  postgres_data:

networks:
  voice-network:
    driver: bridge
